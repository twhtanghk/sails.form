// Generated by CoffeeScript 1.12.5
(function() {
  var _, fields, forms;

  _ = require('lodash');

  forms = require('forms');

  fields = forms.fields;

  module.exports = {

    /*
    convert sails attribute type to caolan type
     */
    type: function(type) {
      var error;
      error = function() {
        throw new Error("not supported type " + type);
      };
      switch (type) {
        case 'text':
          return 'string';
        case 'integer':
          return 'number';
        case 'float':
          return 'number';
        case 'datetime':
          return 'date';
        case 'binary':
          return error();
        case 'json':
          return 'string';
        case 'mediumtext':
          return 'string';
        case 'longtext':
          return 'string';
        case 'objectid':
          return 'string';
        default:
          return type;
      }
    },

    /*
    convert sails attribute validator to caolan validator
    attr:
      type: 'string'
      required: true
      unique: true
    return:
      required: true
     */
    validator: function(attr) {
      return _.pick(attr, 'required');
    },

    /*
    convert sails attributes to caolan attribute
    attr:
      name:
        type: 'string'
        required: true
        unique: true
    return:
      name:
        fields.string required: true
     */
    attrs: function(attrs) {
      var iterator;
      iterator = function(result, params, name) {
        var type;
        type = params.type ? module.exports.type(params.type) : 'string';
        result[name] = fields[type](module.exports.validator(params));
        return result;
      };
      return _.reduce(attrs, iterator, {});
    },

    /*
    convert sails model to caolan model
    model:
      attributes:
        attr1: ...
        attr2: ...
        ...
    include: [attribute1, attribute2, ...] or null to include all
    exclude: [attribute1, attribute2, ...] or null to exclude nothing
     */
    model: function(model, exclude, include) {
      if (exclude == null) {
        exclude = null;
      }
      if (include == null) {
        include = '__all__';
      }
      model = _.omit(model, exclude);
      if (include !== '__all__') {
        model = _.pick(model, include);
      }
      return module.exports.attrs(model);
    },
    form: function(model, exclude, include) {
      if (exclude == null) {
        exclude = null;
      }
      if (include == null) {
        include = '__all__';
      }
      return forms.create(module.exports.model(model, include, exclude));
    },
    html: function(model, exclude, include) {
      if (exclude == null) {
        exclude = null;
      }
      if (include == null) {
        include = '__all__';
      }
      return module.exports.form(model, include, exclude).toHTML();
    }
  };

}).call(this);
